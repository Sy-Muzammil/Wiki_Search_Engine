package com.muzi.indexer;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class SearchWordIndex {
		
		static BufferedReader br;
		static List postingList = new ArrayList<String>();
		
		// tertiaryIndexRead
		// TreeMap
		
		static String findInSecondaryIndex(String twoChar,String s) throws IOException{
			ArrayList<String>terms = new ArrayList<>();
			ArrayList<String>offset = new ArrayList<>();
			br = new BufferedReader(new FileReader(Utils.BASE_PATH + "index/split/secondary/" + twoChar + ".txt"));
			
			String line = br.readLine();
			System.out.println("secline: " + line);
			String s1 = "abc", s2="def";
//			s1.compareTo(s2)
			String oldOffset = null;
			while(line != null){
				String[] wordOffset = line.split(":");
				
				if(wordOffset[0].compareTo(s) >= 0) {
					return oldOffset == null? wordOffset[1]: oldOffset;
				}
				oldOffset = wordOffset[1];
				line = br.readLine();
				/*if( searchWord >= curLineWord) {
					break and return offset;
				}*/
//				terms.add(wordOffset[0]);
//				offset.add(wordOffset[1]);
			}
			br.close();/*
			int index =  Collections.binarySearch(terms,s);
			if(index < 0)
				index = Math.abs(index)-2;
			return offset.get(index);
		*/	
			return null;
		
		}
		
		
		public static long findInPrimaryIndex(String twoChar,
				String wordToSearch, String secOffset) throws NumberFormatException, IOException {
			
			long primOffset;
			int blockSize=0;
			String line;
			
			RandomAccessFile readPointer = new RandomAccessFile(Utils.BASE_PATH + "index/split/primary/" + twoChar + ".txt", "r");
			readPointer.seek(Long.parseLong(secOffset));
			
			while (true) {
				line = readPointer.readLine();
				System.out.println("1mary "+line);
				if(blockSize>1000) 
					return -1;
				blockSize++;
			
				if (line.split(":")[0].equals(wordToSearch)) {
					primOffset = Long.parseLong(line.split(":")[1]);
					break;
				}
			
			}
			System.out.println("primoff: " + primOffset);
			return primOffset;
		}
		
		
		
		private static String findPosting(long primOffset, String twoChar) throws IOException {
			
			
			RandomAccessFile readPointer = new RandomAccessFile(Utils.BASE_PATH + "index/split/index/" + twoChar + ".txt", "r");
			readPointer.seek(primOffset);
			
			String line = readPointer.readLine(); 
			
			return line;
		}
		
		
		
		/*private static ArrayList<String> calculateTf(
				ArrayList<String> postingList2) {
			long freq;
			String s = "";
			for(int i =0; i<postingList2.size();i++){
				String tmp = postingList2.get(i);
				int k = 0;
				for(int j = 0 ; j < tmp.length();j++){
					if( Character.isLetter (tmp.charAt(j)) )
						continue;
					while(j <tmp.length() && Character.isDigit(tmp.charAt(j)) )
						k++;
					freq = Long.parseLong( tmp.substring(j+1,k));
					
					switch(tmp.charAt(j)){
						case 'b' : freq *= 1;
									break;
									
						case 'c' : freq *= 20;
									break;
									
						case 'i' : freq *= 10;
									break;
									
						case 't' : freq *= 100;
									break;
									
					}
					
				s += ( tmp.charAt(j) + String.valueOf(freq) );		
				}
				postingList2.add(i,s);
			}
			return postingList2;
		}*/
		
		
		/*private static ArrayList<String> calculateIdf(
				ArrayList<String> postingList2) {
			//how to calculate idf
			// idf = log(no of words in document/freq of given word)
			
			return null;
		}*/
		
		
		/*private static void calculateTfIdf(ArrayList<String> postingList) {
			//1. Calculate tf
			//2. Calculate idf
			//3. Calculate tfidf and return top k posting lists
			
			postingList = calculateTf(postingList);
			postingList = calculateIdf(postingList);
			
		}*/


		public static void main(String[] args) throws IOException {
			
			String searchWord = "india" ;// args[0];
			/*	
			 * 1. first check the word in title index
			 * 2. If not... pass word for stemming and remove stopwords.		
			*/
			String twoChar = searchWord.substring(0,2);
			String wordToSearch = searchWord.substring(2,searchWord.length());
			
			System.out.println("Starting search " + twoChar + ", " + wordToSearch);
			String secOffset = findInSecondaryIndex(twoChar,wordToSearch);
			System.out.println("secondary index search done offset " + secOffset);
			long primOffset = findInPrimaryIndex(twoChar,wordToSearch,secOffset);
			System.out.println("primary index search done offset " + primOffset  );
			String posting = findPosting(primOffset,twoChar);
			System.out.println("main index search done, " + posting );
			
			String sortedEntries = Utils.getSortedEntry(posting);
			
			System.out.println(sortedEntries);
			
			//now we have to do tfidf on posting list and return top k
			//calculateTfIdf(postingList);
					
			
		}
		/*
	Starting search in, dia
secline: 01:0
secondary index search done offset 6863
1mary di:315423
1mary dia:324073
primoff: 324073
primary index search done offset 324073
main index search done, d9245283b1t0c0i0;d9245399b1t0c0i0;d9245449b1t0c0i0;d9245480b1t0c0i0;d9245540b1t0c0i0;d9245611b4t0c0i0;d9245759b4t0c0i0;d9245840b1t0c0i0;d9254746b19t0c0i0;d9254749b10t0c0i0;d9254754b11t0c0i0;d9254786b58t0c0i0;d9245877b1t0c0i0;d9254849b1t0c0i0;d9254857b1t0c0i0;d9254888b1t0c0i0;d9254914b1t0c0i0;d9254924b4t0c0i0;d9254934b2t0c0i0;d9245912b1t0c0i0;d9255008b1t0c0i0;d9255039b3t0c0i0;d9255051b1t0c0i0;d9255182b1t0c0i0;d9255302b4t0c0i0;d9255384b13t0c0i0;d9255386b1t0c0i0;d9255420b1t0c0i0;d9246445b0t1c0i0;d9255439b1t0c0i0;d9246527b0t1c0i0;d9255462b1t0c0i0;d9255493b1t0c0i0;d9255567b0t1c0i0;d9255726b4t0c0i0;d9255748b1t0c0i0;d9265524b1t0c0i0;d9265534b0t1c0i0;d9255765b2t0c0i0;d9247096b16t0c0i0;d9266025b16t0c0i0;d9256165b0t1c0i0;d9247802b1t0c0i0;d9256803b1t0c0i0;d9256906b2t0c0i0;d9266573b8t0c0i0;d9266577b4t0c0i0;d9248387b7t0c0i0;d9266679b1t0c0i0;d9257698b1t0c0i0;d9257790b4t0c0i0;d9266897b5t0c0i0;d9257963b3t0c0i0;d9267101b1t0c0i0;d9267345b1t0c0i0;d9258040b1t0c0i0;d9267562b7t0c0i0;d9249236b2t0c0i0;d9249329b1t0c0i0;d9274240b11t0c0i0;d9267883b1t0c0i0;d9249724b3t0c0i0;d9249751b3t0c0i0;d9268045b1t0c0i0;d9268052b2t0c0i0;d9274389b1t0c0i0;d9249907b3t0c0i0;d9250176b1t0c0i0;d9275039b5t0c0i0;d9268646b7t0c0i0;d9268661b5t0c0i0;d9250601b0t1c0i0;d9268739b6t0c0i0;d9250757b0t1c0i0;d9259470b1t0c0i0;d9268886b31t0c0i0;d9250888b0t1c0i0;d9269078b4t0c0i0;d9284937b1t0c0i0;d9251085b1t0c0i0;d9285321b4t0c0i0;d9260672b2t0c0i0;d9260697b9t0c0i0;d9285428b2t0c0i0;d9269424b7t0c0i0;d9251271b2t0c0i0;d9251309b0t1c0i0;d9251395b3t0c0i0;d9285568b1t0c0i0;d9275993b1t0c0i0;d9251582b0t1c0i0;d9269786b3t0c0i0;d9285709b12t1c0i0;d9285711b5t1c0i0;d9251711b1t0c0i0;d9285716b50t1c0i0;d9251712b0t1c0i0;d9285794b3t0c0i0;d9285798b3t0c0i0;d9251821b3t0c0i0;d9285865b1t0c0i0;d9285886b1t0c0i0;d9285904b20t0c0i0;d9285925b24t0c0i0;d9292685b3t0c0i0;d9285982b1t0c0i0;d9285983b0t1c0i0;d9270217b1t0c0i0;d9270275b4t0c0i0;d9286119b1t0c0i0;d9252042b6t0c0i0;d9252075b16t0c0i0;d9252228b1t0c0i0;d9276536b1t0c0i0;d9286236b3t0c0i0;d9286293b1t0c0i0;d9252621b2t0c0i0;d9286337b1t0c0i0;d9253023b25t0c0i0;d9304593b6t0c0i0;d9286512b25t0c0i0;d9253381b1t0c0i0;d9286578b4t0c0i0;d9253629b17t0c0i0;d9293550b2t0c0i0;d9271320b4t0c0i0;d9286652b1t0c0i0;d9263322b5t0c0i0;d9305311b10t0c0i0;d9263354b1t0c0i0;d9305384b9t0c0i0;d9263434b1t0c0i0;d9312795b4t0c0i0;d9278431b2t0c0i0;d9293951b2t0c0i0;d9278477b2t0c0i0;d9305403b3t0c0i0;d9312920b6t0c0i0;d9278505b0t1c0i0;d9254540b1t0c0i0;d9312992b10t0c0i0;d9278586b0t1c0i0;d9271904b2t0c0i0;d9305589b6t0c0i0;d9286997b31t0c0i0;d9254688b5t0c0i0;d9313152b1t0c0i0;d9305648b4t1c0i0;d9254694b40t0c0i0;d9254700b6t0c0i0;d9254701b1t0c0i0;d9254702b25t0c0i0;d9321529b4t0c0i0;d9287142b1t0c0i0;d9254719b5t0c0i0;d9263826b11t0c0i0;d9254726b45t0c0i0;d9305816b1t0c0i0;d9254729b21t0c0i0;d9254734b6t0c0i0;d9254743b9t0c0i0;d9272179b20t0c0i0;d9287212b2t0c0i0;d9306051b2t0c0i0;d9321647b3t0c0i0;d9264023b1t0c0i0;d9313589b1t0c0i0;d9313602b3t0c0i0;d9306239b3t0c0i0;d9306305b6t0c0i0;d9287979b1t0c0i0;d9306418b11t0c0i0;d9264215b1t0c0i0;d9306488b4t0c0i0;d9306507b2t0c0i0;d9331420b2t0c0i0;d9331452b2t1c0i0;d9264315b1t0c0i0;d9331464b0t1c0i0;d9288209b3t0c0i0;d9288210b1t0c0i0;d9306562b38t0c0i0;d9306629b1t0c0i0;d9264609b27t0c0i0;d9331882b3t0c0i0;d9279626b2t0c0i0;d9264709b10t0c0i0;d9322401b9t0c0i0;d9264722b333t1c0i0;d9322402b2t0c0i0;d9295460b3t0c0i0;d9264781b5t0c0i0;d9288510b0t1c0i0;d9314350b2t0c0i0;d9273237b2t0c0i0;d9322567b4t0c0i0;d9343209b2t0c0i0;d9279959b2t0c0i0;d9314471b1t0c0i0;d9273356b9t0c0i0;d9273453b1t0c0i0;d9307052b7t0c0i0;d9343306b0t1c0i0;d9273495b2t0c0i0;d9343320b1t0c0i0;d9307114b10t0c0i0;d9288794b1t0c0i0;d9343438b1t0c0i0;d9307143b9t0c0i0;d9288816b9t0c0i0;d9314765b1t0c0i0;d9307164b6t0c0i0;d9307193b4t0c0i0;d9343602b7t0c0i0;d9280451b2t0c0i0;d9307212b8t0c0i0;d9307236b18t0c0i0;d9332505b1t0c0i0;d9296551b2t0c0i0;d9346765b1t0c0i0;d9327311b2t0c0i0;d9397111b10t0c0i0;d9406922b1t0c0i0;d9377444b3t0c0i0;d9423251b13t0c0i0;d9292272b2t1c0i0;d9431233b7t0c0i0;d9464188b8t0c0i0;d9292295b10t1c0i0;d9431284b3t0c0i0;d9471628b1t0c0i0;d9464247b9t0c0i0;d9366593b1t0c0i0;d9423276b1t0c0i0;d9318903b1t0c0i0;d9415368b36t0c0i0;d9455688b1t0c0i0;d9386700b1t0c0i0;d9310874b2t0c0i0;d9442626b0t1c0i0;d9386799b0t1c0i0;d9464307b6t0c0i0;d9464361b8t0c0i0;d9386968b2t0c0i0;d9449290b5t0c0i0;d9346973b1t0c0i0;d9347007b3t0c0i0;d9386986b1t0c0i0;d9471990b2t0c0i0;d9347140b4t0c0i0;d9377753b4t0c0i0;d9367138b2t0c0i0;d9327620b1t0c0i0;d9319119b2t0c0i0;d9442750b0t1c0i0;d9356502b1t0c0i0;d9356530b3t0c0i0;d9336703b2t0c0i0;d9311216b2t0c0i0;d9387177b1t0c0i0;d9472238b1t0c0i0;d9398133b1t0c0i0;d9423626b1t0c0i0;d9336765b1t0c0i0;d9319354b2t0c0i0;d9367434b1t0c0i0;d9472356b1t0c0i0;d9347394b6t0c0i0;d9367479b1t0c0i0;d9423785b2t0c0i0;d9311392b0t1c0i0;d9367526b1t0c0i0;d9311405b1t0c0i0;d9416076b1t0c0i0;d9481508b1t0c0i0;d9387419b1t0c0i0;d9431715b1t0c0i0;d9472420b2t0c0i0;d9378163b4t0c0i0;d9356708b2t0c0i0;d9387475b9t0c0i0;d9449583b4t0c0i0;d9311462b3t0c0i0;d9378202b2t0c0i0;d9431755b2t0c0i0;d9449630b10t0c0i0;d9336953b19t0c0i0;d9319823b1t0c0i0;d9456222b30t0c0i0;d9328340b0t1c0i0;d9367758b9t0c0i0;d9311494b1t0c0i0;d9465044b1t0c0i0;d9398580b1t0c0i0;d9423928b5t0c0i0;d9481925b12t0c0i0;d9407481b1t0c0i0;d9481926b10t0c0i0;d9416380b1t0c0i0;d9431829b2t0c0i0;d9311550b2t0c0i0;d9456281b8t0c0i0;d9407509b12t0c0i0;d9320107b1t0c0i0;d9302327b3t0c0i0;d9367933b6t0c0i0;d9443276b4t0c0i0;d9407545b1t0c0i0;d9387918b1t0c0i0;d9472838b10t0c0i0;d9482127b3t0c0i0;d9311733b2t0c0i0;d9490249b3t0c0i0;d9368130b1t0c0i0;d9320165b1t0c0i0;d9465314b2t0c0i0;d9347849b1t0c0i0;d9368161b10t0c0i0;d9357204b2t0c0i0;d9443459b2t0c0i0;d9311753b1t0c0i0;d9311778b6t0c0i0;d9398801b2t0c0i0;d9416728b2t0c0i0;d9348029b6t0c0i0;d9490392b7t0c0i0;d9368247b2t0c0i0;d9388109b0t1c0i0;d9443593b6t0c0i0;d9416798b1t0c0i0;d9320252b1t0c0i0;d9473013b5t0c0i0;d9443602b1t0c0i0;d9338047b11t0c0i0;d9328850b2t0c0i0;d9302649b1t0c0i0;d9388196b1t0c0i0;d9482312b1t0c0i0;d9328930b19t0c0i0;d9500275b1t0c0i0;d9311963b3t0c0i0;d9482361b1t0c0i0;d9465821b1t0c0i0;d9388428b1t0c0i0;d9450228b1t0c0i0;d9465872b3t0c0i0;d9465883b2t0c0i0;d9432278b10t0c0i0;d9312004b3t0c0i0;d9465973b3t0c0i0;d9368452b5t0c0i0;d9509357b4t0c0i0;d9417291b8t0c0i0;d9388522b10t0c0i0;d9466038b2t0c0i0;d9500447b7t0c0i0;d9466088b4t0c0i0;d9509416b0t1c0i0;d9509423b0t1c0i0;d9450333b1t0c0i0;d9466160b1t0c0i0;d9329471b1t0c0i0;d9509428b23t1c0i0;d9303045b8t0c0i0;d9443952b6t0c0i0;d9417508b1t0c0i0;d9399138b1t0c0i0;d9482611b1t0c0i0;d9500558b8t0c0i0;d9432490b1t0c0i0;d9500567b1t0c0i0;d9329483b2t0c0i0;d9368620b6t0c0i0;d9466365b10t0c0i0;d9500667b3t0c0i0;d9388694b9t0c0i0;d9417624b2t0c0i0;d9320561b2t0c0i0;d9388800b2t0c0i0;d9399244b9t0c0i0;d9379466b22t0c0i0;d9450472b4t0c0i0;d9303385b2t0c0i0;d9482915b1t0c0i0;d9338675b0t1c0i0;d9303541b7t0c0i0;d9417833b6t0c0i0;d9329743b3t0c0i0;d9320723b14t0c0i0;d9500902b1t0c0i0;d9303687b4t0c0i0;d9408494b1t0c0i0;d9369044b2t0c0i0;d9500944b1t0c0i0;d9379686b7t0c0i0;d9473497b1t0c0i0;d9389095b3t0c0i0;d9500991b5t0c0i0;d9389099b2t0c0i0;d9303827b1t0c0i0;d9329786b2t0c0i0;d9339087b0t1c0i0;d9432857b1t0c0i0;d9457122b1t0c0i0;d9501027b2t0c0i0;d9501058b4t0c0i0;d9444481b3t0c0i0;d9466823b99t1c0i0;d9358379b5t0c0i0;d9473825b1t0c0i0;d9348960b1t0c0i0;d9483286b1t0c0i0;d9349061b5t0c0i0;d9339208b0t1c0i0;d9362901b3t0c0i0;d9323094b7t0c0i0;d9273716b2t0c0i0;d9332582b7t0c0i0;d9343719b2t0c0i0;d9323197b0t1c0i0;d9373337b1t0c0i0;d9280632b2t0c0i0;d9289196b4t0c0i0;d9362963b22t0c0i0;d9307441b10t0c0i0;d9343976b1t0c0i0;d9297226b1t0c0i0;d9363104b5t0c0i0;d9315230b2t0c0i0;d9383985b1t0c0i0;d9383996b1t0c0i0;d9333069b1t0c0i0;d9307653b2t0c0i0;d9352992b1t0c0i0;d9363361b7t0c0i0;d9323917b2t0c0i0;d9324038b1t0c0i0;d9374024b3t0c0i0;d9384153b20t0c0i0;d9374050b3t0c0i0;d9324201b1t0c0i0;d9363521b2t0c0i0;d9344386b2t0c0i0;d9308067b12t1c0i0;d9308092b1t0c0i0;d9344461b3t0c0i0;d9315749b1t0c0i0;d9297834b39t0c0i0;d9333366b8t0c0i0;d9363666b1t0c0i0;d9333509b2t0c0i0;d9353336b4t0c0i0;d9384316b9t0c0i0;d9363875b1t0c0i0;d9324565b22t0c0i0;d9333613b1t0c0i0;d9384401b19t0c0i0;d9308380b36t1c0i0;d9308409b2t0c0i0;d9308432b9t1c0i0;d9344774b1t0c0i0;d9353519b2t0c0i0;d9374641b10t0c0i0;d9308454b1t0c0i0;d9344831b9t0c0i0;d9394145b3t0c0i0;d9353577b1t0c0i0;d9384638b2t0c0i0;d9374715b10t0c0i0;d9344879b6t0c0i0;d9333778b42t0c0i0;d9333974b12t0c0i0;d9344947b33t0c0i0;d9344952b4t0c0i0;d9298130b9t0c0i0;d9308512b4t0c0i0;d9364295b14t0c0i0;d9324883b1t0c0i0;d9282116b11t0c0i0;d9405039b2t0c0i0;d9298300b1t0c0i0;d9405102b2t0c0i0;d9308586b6t0c0i0;d9364340b2t0c0i0;d9298395b2t0c0i0;d9290179b0t1c0i0;d9308589b5t0c0i0;d9394423b1t0c0i0;d9308623b3t0c0i0;d9325128b1t0c0i0;d9345261b5t0c0i0;d9353863b3t0c0i0;d9325162b2t0c0i0;d9364516b38t0c0i0;d9282173b11t0c0i0;d9316942b10t0c0i0;d9345324b3t0c0i0;d9334292b1t0c0i0;d9364554b1t0c0i0;d9364586b8t0c0i0;d9298782b1t0c0i0;d9325363b2t0c0i0;d9364774b21t0c0i0;d9364776b2t0c0i0;d9308910b2t0c0i0;d9395066b1t0c0i0;d9309059b1t0c0i0;d9325460b1t0c0i0;d9325486b1t0c0i0;d9395068b1t0c0i0;d9364965b1t0c0i0;d9405601b1t0c0i0;d9282855b9t0c0i0;d9299090b10t0c0i0;d9345527b1t0c0i0;d9299268b5t0c0i0;d9309161b1t0c0i0;d9385370b3t0c0i0;d9354433b1t0c0i0;d9365110b1t0c0i0;d9405704b2t0c0i0;d9421965b3t0c0i0;d9345625b4t0c0i0;d9283207b3t0c0i0;d9365164b1t0c0i0;d9299405b2t0c0i0;d9413818b2t0c0i0;d9365214b7t0c0i0;d9325827b5t0c0i0;d9283302b3t0c0i0;d9299479b2t0c0i0;d9354610b3t0c0i0;d9422034b8t0c0i0;d9365286b1t0c0i0;d9325900b1t0c0i0;d9365325b1t0c0i0;d9354649b1t0c0i0;d9414019b3t0c0i0;d9299544b3t0c0i0;d9422080b4t0c0i0;d9326029b2t0c0i0;d9317659b1t0c0i0;d9422117b25t0c0i0;d9414109b32t0c0i0;d9334910b30t0c0i0;d9430473b1t0c0i0;d9385613b5t0c0i0;d9291279b1t0c0i0;d9309491b1t0c0i0;d9385678b1t0c0i0;d9414134b1t0c0i0;d9422224b30t0c0i0;d9422229b1t0c0i0;d9396104b4t0c0i0;d9299963b2t0c0i0;d9326410b4t0c0i0;d9326434b1t0c0i0;d9422278b1t0c0i0;d9345946b4t0c0i0;d9406278b1t0c0i0;d9422302b1t0c0i0;d9396111b1t0c0i0;d9422319b2t0c0i0;d9385817b1t0c0i0;d9385822b4t0c0i0;d9355061b8t0c0i0;d9355082b4t0c0i0;d9441518b1t0c0i0;d9335245b2t0c0i0;d9365715b11t1c0i0;d9406388b1t0c0i0;d9422417b1t0c0i0;d9365809b1t0c0i0;d9283937b1t0c0i0;d9414434b9t0c0i0;d9355262b2t0c0i0;d9335283b1t0c0i0;d9346215b9t0c0i0;d9355337b3t0c0i0;d9335362b3t0c0i0;d9318281b7t0c0i0;d9355507b6t0c0i0;d9291914b2t0c0i0;d9310119b7t0c0i0;d9365953b3t0c0i0;d9441851b3t0c0i0;d9318404b1t0c0i0;d9355587b2t0c0i0;d9406652b3t0c0i0;d9335492b2t0c0i0;d9327031b1t0c0i0;d9327056b6t0c0i0;d9355642b4t0c0i0;d9318453b1t0c0i0;d9386382b1t0c0i0;d9346533b1t0c0i0;d9346544b1t0c0i0;d9386418b2t0c0i0;d9366061b2t0c0i0;d9355715b3t0c0i0;d9310320b1t0c0i0;d9464057b6t0c0i0;d9430996b2t0c0i0;d9422990b1t0c0i0;d9300737b5t0c0i0;d9386460b10t0c0i0;d9455452b1t0c0i0;d9300812b22t0c0i0;d9396967b2t0c0i0;d9464145b6t0c0i0;d9415207b1t0c0i0;d9442226b5t0c0i0;d9386546b1t0c0i0;d9402898b6t0c0i0;d9411518b5t0c0i0;d9477818b5t1c0i0;d9352337b2t0c0i0;d9372607b42t0c0i0;d9352342b2t0c0i0;d9453339b4t0c0i0;d9493356b1t0c0i0;d9402926b15t1c0i0;d9411601b3t0c0i0;d9493357b1t0c0i0;d9425758b4t0c0i0;d9453345b3t0c0i0;d9383296b8t0c0i0;d9420880b6t0c0i0;d9392549b1t0c0i0;d9411676b12t0c0i0;d9425783b2t0c0i0;d9411732b1t0c0i0;d9477911b2t0c0i0;d9403201b2t0c0i0;d9493400b10t0c0i0;d9477954b2t0c0i0;d9403308b1t0c0i0;d9383433b5t0c0i0;d9373065b4t0c0i0;d9478106b3t0c0i0;d9421149b0t1c0i0;d9460482b2t0c0i0;d9504294b1t0c0i0;d9425873b1t0c0i0;d9425906b5t0c0i0;d9460581b1t0c0i0;d9453476b7t0c0i0;d9478115b3t0c0i0;d9437083b5t0c0i0;d9453535b2t0c0i0;d9460711b8t0c0i0;d9425942b2t0c0i0;d9383517b7t0c0i0;d9512574b2t0c0i0;d9403478b1t0c0i0;d9383523b6t0c0i0;d9493544b1t0c0i0;d9512616b1t0c0i0;d9425979b4t0c0i0;d9470296b39t0c0i0;d9383589b7t0c0i0;d9383596b10t0c0i0;d9504431b5t0c0i0;d9453703b1t0c0i0;d9512688b1t0c0i0;d9493570b1t0c0i0;d9426122b7t0c0i0;d9478308b1t0c0i0;d9421431b2t0c0i0;d9437507b1t0c0i0;d9362589b4t0c0i0;d9393127b2t0c0i0;d9493625b1t0c0i0;d9470438b1t0c0i0;d9421441b2t0c0i0;d9426153b11t0c0i0;d9403568b6t0c0i0;d9403579b1t0c0i0;d9486275b2t0c0i0;d9504622b2t0c0i0;d9412134b5t0c0i0;d9437662b1t0c0i0;d9426210b3t0c0i0;d9426235b3t0c0i0;d9504632b7t0c0i0;d9437772b5t0c0i0;d9421460b6t0c0i0;d9512866b1t0c0i0;d9362700b6t0c0i0;d9403643b3t0c0i0;d9437838b1t0c0i0;d9453888b1t0c0i0;d9412167b11t0c0i0;d9493715b1t0c0i0;d9393335b8t0c0i0;d9512958b1t0c0i0;d9437868b28t0c0i0;d9512971b3t0c0i0;d9412413b1t0c0i0;d9437897b1t0c0i0;d9454097b3t0c0i0;d9470637b1t0c0i0;d9493801b1t0c0i0;d9461419b16t0c0i0;d9403748b3t0c0i0;d9438084b2t0c0i0;d9454227b8t0c0i0;d9438085b1t0c0i0;d9461505b2t0c0i0;d9362881b1t0c0i0;d9504808b1t0c0i0;d9486633b1t0c0i0;d9493981b1t0c0i0;d9493983b1t0c0i0;d9426567b1t0c0i0;d9403902b3t0c0i0;d9461625b1t0c0i0;d9486687b6t0c0i0;d9461694b3t0c0i0;d9461702b1t0c0i0;d9486763b1t0c0i0;d9486829b2t0c0i0;d9421730b1t0c0i0;d9404076b11t0c0i0;d9486873b1t0c0i0;d9486905b1t0c0i0;d9486935b1t0c0i0;d9421784b1t0c0i0;d9421812b9t0c0i0;d9461852b1t0c0i0;d9421849b2t0c0i0;d9454697b10t0c0i0;d9479075b14t0c0i0;d9427109b1t0c0i0;d9404578b2t0c0i0;d9494521b0t1c0i0;d9479247b5t0c0i0;d9404634b8t0c0i0;d9479279b2t0c0i0;d9513418b1t0c0i0;d9462180b5t0c0i0;d9513426b4t0c0i0;d9505370b3t0c0i0;d9513447b2t0c0i0;d9462300b0t1c0i0;d9513467b1t0c0i0;d9513487b1t0c0i0;d9462356b12t0c0i0;d9462393b7t0c0i0;d9513524b1t0c0i0;d9513527b1t0c0i0;d9462461b5t0c0i0;d9404989b12t0c0i0;d9513537b1t0c0i0;d9513543b2t0c0i0;d9479570b4t0c0i0;d9494704b2t0c0i0;d9440544b3t0c0i0;d9513571b1t0c0i0;d9462614b10t0c0i0;d9427472b1t0c0i0;d9440600b2t0c0i0;d9462745b0t1c0i0;d9427806b2t0c0i0;d9505815b1t0c0i0;d9494979b3t0c0i0;d9505820b3t0c0i0;d9494980b1t0c0i0;d9513709b1t0c0i0;d9441057b8t0c0i0;d9463021b19t0c0i0;d9479936b1t0c0i0;d9479942b2t0c0i0;d9479974b2t0c0i0;d9479990b2t0c0i0;d9513905b2t0c0i0;d9428364b1t0c0i0;d9480154b2t0c0i0;d9480203b13t1c0i0;d9480220b2t0c0i0;d9514002b2t0c0i0;d9428452b5t0c0i0;d9480255b2t0c0i0;d9495157b3t0c0i0;d9506695b8t0c0i0;d9428503b1t0c0i0;d9463545b1t0c0i0;d9480277b10t0c0i0;d9463552b6t0c0i0;d9480286b1t0c0i0;d9428728b4t0c0i0;d9514127b1t0c0i0;d9495306b1t0c0i0;d9463674b8t0c0i0;d9514147b1t0c0i0;d9514190b2t0c0i0;d9463775b5t0c0i0;d9514207b3t0c0i0;d9488675b1t0c0i0;d9514220b2t0c0i0;d9495357b9t0c0i0;d9514242b1t0c0i0;d9428930b1t0c0i0;d9514261b1t0c0i0;d9428952b5t0c0i0;d9463971b1t0c0i0;d9514352b5t0c0i0;d9495507b1t0c0i0;d9514374b1t0c0i0;d9480453b9t1c0i0;d9514393b1t0c0i0;d9489056b1t0c0i0;d9429240b1t0c0i0;d9429247b1t0c0i0;d9480564b2t0c0i0;d9495654b13t0c0i0;d9495674b1t0c0i0;d9495704b1t0c0i0;d9429442b3t0c0i0;d9495766b1t0c0i0;d9495873b1t0c0i0;d9508261b22t0c0i0;d9508298b0t1c0i0;d9508319b0t1c0i0;d9508321b0t1c0i0;d9508335b0t1c0i0;d9508340b0t1c0i0;d9508349b0t1c0i0;d9480646b6t0c0i0;d9495982b9t0c0i0;d9480791b2t0c0i0;d9496047b1t0c0i0;d9515044b4t0c0i0;d9508455b167t0c0i0;d9515076b4t0c0i0;d9508474b37t0c0i0;d9496126b27t0c0i0;d9508483b1t0c0i0;d9496143b1t0c0i0;d9515198b2t0c0i0;d9481191b1t0c0i0;d9515243b1t0c0i0;d9508670b1t0c0i0;d9430362b1t0c0i0;d9508699b1t0c0i0;d9508746b4t0c0i0;d9496453b2t0c0i0;d9496459b4t0c0i0;d9515739b1t0c0i0;d9508980b0t1c0i0;d9509007b0t1c0i0;d9509022b0t1c0i0;d9496720b1t0c0i0;d9515951b1t0c0i0;d9509342b1t0c0i0;d9516017b1t0c0i0;d9516812b7t0c0i0;d9516820b12t0c0i0;d9516863b3t0c0i0;d9516938b3t0c0i0;d9516965b8t0c0i0;d9517019b2t0c0i0;d9517047b2t0c0i0;d9517103b10t0c0i0;d9517278b1t0c0i0;d9499281b3t0c0i0;d9499440b17t0c0i0;d9501275b13t0c0i0;d9473941b4t0c0i0;d9349158b2t0c0i0;d9358516b1t0c0i0;d9457346b31t0c0i0;d9474033b0t1c0i0;d9380113b2t0c0i0;d9400241b6t0c0i0;d9433092b5t0c0i0;d9433120b12t0c0i0;d9418286b1t0c0i0;d9408939b3t0c0i0;d9501582b3t0c0i0;d9330023b1t0c0i0;d9369429b22t0c0i0;d9330086b1t0c0i0;d9409040b0t1c0i0;d9445045b2t0c0i0;d9418296b62t0c0i0;d9380257b1t0c0i0;d9445183b4t0c0i0;d9510147b8t0c0i0;d9433220b15t0c0i0;d9349528b2t0c0i0;d9339569b1t0c0i0;d9409111b1t0c0i0;d9369613b2t0c0i0;d9389794b1t0c0i0;d9321409b2t0c0i0;d9369637b2t0c0i0;d9380340b1t0c0i0;d9369644b9t0c0i0;d9339660b1t0c0i0;d9501772b1t0c0i0;d9418432b3t0c0i0;d9321464b1t0c0i0;d9389885b1t0c0i0;d9380403b6t0c0i0;d9510195b10t0c0i0;d9457698b6t0c0i0;d9339710b30t0c0i0;d9418450b1t0c0i0;d9467421b0t1c0i0;d9467426b0t1c0i0;d9409277b1t0c0i0;d9380420b1t0c0i0;d9467446b0t1c0i0;d9339789b25t0c0i0;d9400744b3t0c0i0;d9359048b0t1c0i0;d9418475b1t0c0i0;d9339835b2t0c0i0;d9380491b7t0c0i0;d9483830b3t0c0i0;d9390022b2t0c0i0;d9380555b8t0c0i0;d9467543b2t0c0i0;d9339868b30t0c0i0;d9400837b7t0c0i0;d9380595b2t0c0i0;d9330481b2t0c0i0;d9457953b1t0c0i0;d9400878b2t0c0i0;d9349908b1t0c0i0;d9339947b31t0c0i0;d9390153b2t0c0i0;d9433802b1t0c0i0;d9474810b3t0c0i0;d9340046b24t0c0i0;d9484058b1t0c0i0;d9467758b1t0c0i0;d9409547b5t0c0i0;d9484113b3t0c0i0;d9424596b4t0c0i0;d9492034b1t0c0i0;d9401253b5t0c0i0;d9340430b1t0c0i0;d9330997b1t0c0i0;d9484291b1t0c0i0;d9370791b3t0c0i0;d9390526b0t1c0i0;d9451574b17t0c0i0;d9401357b1t0c0i0;d9409683b1t0c0i0;d9370834b1t0c0i0;d9350400b2t0c0i0;d9360008b14t0c0i0;d9502671b2t0c0i0;d9341005b0t1c0i0;d9492290b4t0c0i0;d9475601b2t0c0i0;d9424658b7t0c0i0;d9341245b7t0c0i0;d9371208b2t0c0i0;d9371210b2t0c0i0;d9401668b6t0c0i0;d9502915b2t0c0i0;d9381407b12t0c0i0;d9459052b1t0c0i0;d9475914b1t0c0i0;d9391040b5t0c0i0;d9401764b1t0c0i0;d9401780b7t0c0i0;d9410269b0t1c0i0;d9410290b1t0c0i0;d9391085b1t0c0i0;d9451971b1t0c0i0;d9435203b8t0c0i0;d9468427b1t0c0i0;d9381735b4t0c0i0;d9492575b1t0c0i0;d9360540b0t1c0i0;d9435411b1t0c0i0;d9424885b9t0c0i0;d9342006b7t0c0i0;d9371543b4t0c0i0;d9381820b2t0c0i0;d9351002b2t0c0i0;d9381862b1t0c0i0;d9419443b1t0c0i0;d9382000b1t0c0i0;d9351050b1t0c0i0;d9382007b7t0c0i0;d9360733b6t0c0i0;d9459359b1t0c0i0;d9402074b1t0c0i0;d9511242b6t0c0i0;d9410509b8t0c0i0;d9419554b3t0c0i0;d9351082b8t0c0i0;d9435639b1t0c0i0;d9360757b20t0c0i0;d9342301b6t0c0i0;d9342349b2t0c0i0;d9452347b1t0c0i0;d9402115b4t0c0i0;d9511325b14t0c0i0;d9382239b7t0c0i0;d9391589b1t0c0i0;d9452384b4t0c0i0;d9382276b9t0c0i0;d9371994b8t0c0i0;d9459668b4t0c0i0;d9511372b14t0c0i0;d9485196b3t0c0i0;d9391611b1t0c0i0;d9402224b13t0c0i0;d9402253b1t0c0i0;d9511401b1t0c0i0;d9485301b1t0c0i0;d9425201b1t0c0i0;d9503548b5t0c0i0;d9459714b13t0c0i0;d9351455b2t0c0i0;d9372086b2t0c0i0;d9361014b1t0c0i0;d9342672b26t0c0i0;d9342681b3t1c0i0;d9342687b5t1c0i0;d9342691b1t1c0i0;d9342696b11t1c0i0;d9419906b4t0c0i0;d9476895b1t0c0i0;d9372159b7t0c0i0;d9447384b1t0c0i0;d9372218b3t0c0i0;d9503674b4t0c0i0;d9477004b1t0c0i0;d9425296b2t0c0i0;d9447392b1t0c0i0;d9342819b44t0c0i0;d9503710b1t0c0i0;d9342821b8t0c0i0;d9342823b9t0c0i0;d9342826b7t0c0i0;d9342832b7t0c0i0;d9342835b6t0c0i0;d9342841b19t0c0i0;d9382663b1t0c0i0;d9485457b2t0c0i0;d9493150b1t0c0i0;d9382706b6t0c0i0;d9420388b3t0c0i0;d9382724b1t0c0i0;d9460046b2t0c0i0;d9342901b1t0c0i0;d9342908b1t0c0i0;d9411193b8t0c0i0;d9452964b0t1c0i0;d9460059b2t0c0i0;d9372391b1t0c0i0;d9342952b1t0c0i0;d9342953b1t0c0i0;d9402778b6t0c0i0;d9382818b1t0c0i0;d9361524b56t0c0i0;d9436554b1t0c0i0;d9511808b2t0c0i0;d9342986b2t0c0i0;d9382826b1t0c0i0;d9382873b6t0c0i0;d9511813b1t0c0i0;d9460149b2t0c0i0;d9420496b2t0c0i0;d9425525b2t0c0i0;d9425532b10t0c0i0;d9436644b2t0c0i0;d9402863b9t0c0i0;d9436698b1t0c0i0;d9425576b4t0c0i0;d9352156b1t0c0i0;d9382950b4t0c0i0;d9477563b7t0c0i0;d9425607b3t0c0i0;d9352179b2t0c0i0;d9447831b1t0c0i0;d9343059b0t1c0i0;d9425658b5t0c0i0;d9361630b1t0c0i0;d9485636b5t0c0i0;d9511962b1t0c0i0;d9420654b3t0c0i0;d9411484b4t0c0i0;d9512005b1t0c0i0;d9517751b5t0c0i0;d9499961b22t0c0i0;d9517792b7t0c0i0;d9517829b5t0c0i0;

		 */
}
